{"version":3,"sources":["AppService.ts","components/TinyCard.tsx","components/PlayerCards.tsx","components/Coin.tsx","components/Players.tsx","components/Card.tsx","components/Table.tsx","components/Button.tsx","components/PlayerActions.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["deck","number","color","Container","styled","CardCore","UpsideDown","TinyCard","props","toString","padStart","Sequence","PlayerCards","cards","map","orderedCards","card","Style","Coin","StyledPlayer","Score","Name","StyledPlayerCards","Info","ShowCards","Wrapper","ShowDetails","Player","useState","show","setShow","name","score","coins","length","onClick","id","Players","list","minimized","setMinimized","item","Card","Deck","Points","Table","StyledButton","Button","Actions","PlayerActions","player","handleCardsOrder","payToPass","Page","Turn","Header","Footer","Main","App","finished","setFinished","players","setPlayers","tableCards","setTableCards","tableCoins","setTableCoins","turn","setTurn","setPlayer","setDeck","useEffect","i","j","Math","floor","random","splice","getShuffledDeck","handleNextTurn","currentTurn","selectPlayer","modd","a","data-testid","subDecks","ordered","sort","b","forEach","index","push","splitPlayerDeck","points","reduce","acc","calcScore","arr","updatePlayer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cd1ddaf.chunk.js","sourcesContent":["export type CardType = {\n  number: number,\n  color: string,\n}\n\nexport type PlayerType = {\n  id: number,\n  name: string,\n  coins: number,\n  cards: CardType[],\n  orderedCards?: CardType[][],\n  score: number,\n}\n\nexport const calcScore = (player: PlayerType): number => {\n  const points = player.orderedCards ? player.orderedCards.reduce((acc, item) => acc + item[0].number, 0) : 0;\n  return player.coins >= points ? 0 : points - player.coins;\n};\n\nexport const splitPlayerDeck = (player: PlayerType): CardType[][] => {\n  const subDecks: CardType[][] = [];\n  let number = 0;\n  const ordered = player.cards.sort((a,b) => a.number - b.number);\n  ordered.forEach((item, index) => {\n    if (index === 0) {\n      subDecks[number] = [];\n      subDecks[number].push(item);\n      return;\n    }\n    if (item.number === ordered[index - 1].number + 1) {\n      subDecks[number].push(item);\n      return;\n    };\n    number++;\n    subDecks[number] = [];\n    subDecks[number].push(item);\n  });\n  return subDecks;\n};\n\nconst deck: CardType[] = [\n  { number: 3, color: 'red' },\n  { number: 4, color: 'red' },\n  { number: 5, color: 'red' },\n  { number: 6, color: 'red' },\n  { number: 7, color: 'red' },\n  { number: 8, color: 'red' },\n  { number: 9, color: 'red' },\n  { number: 10, color: 'red' },\n  { number: 11, color: 'red' },\n  { number: 12, color: 'red' },\n  { number: 13, color: 'red' },\n  { number: 14, color: 'red' },\n  { number: 15, color: 'red' },\n  { number: 16, color: 'red' },\n  { number: 17, color: 'red' },\n  { number: 18, color: 'red' },\n  { number: 19, color: 'red' },\n  { number: 20, color: 'red' },\n  { number: 21, color: 'red' },\n  { number: 22, color: 'red' },\n  { number: 23, color: 'red' },\n  { number: 24, color: 'red' },\n  { number: 25, color: 'red' },\n  { number: 26, color: 'red' },\n  { number: 27, color: 'red' },\n  { number: 28, color: 'red' },\n  { number: 29, color: 'red' },\n  { number: 30, color: 'red' },\n  { number: 31, color: 'red' },\n  { number: 32, color: 'red' },\n  { number: 33, color: 'red' },\n  { number: 34, color: 'red' },\n  { number: 35, color: 'red' },\n];\n\nexport const getShuffledDeck = () : CardType[] => {\n  for (let i = deck.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [deck[i], deck[j]] = [deck[j], deck[i]];\n  }\n  const limitedDeck = deck.splice(9, deck.length - 1);\n  return limitedDeck;\n};","import React from 'react';\nimport styled from 'styled-components';\n\nimport { CardType } from '../AppService';\n\nconst Container = styled('li')`\n  display: inline-block;\n  padding: 5px;\n  border-radius: 4px;\n  text-align: left;\n  position: relative;\n  margin-bottom: -20px;\n  margin-left: -40px;\n  background-color: #f0effd;\n  box-shadow: -1px 1px 5px #0000003b;\n  font-size: 11px;\n`;\n\nconst CardCore = styled('span')`\n  padding: 5px;\n  background-color: #8176dd;\n  background-color: #ff7632;\n  border-radius: 4px 4px 0 0;\n  display: block;\n  color: white;\n  font-size: 16px;\n  width: 40px;\n  margin-bottom: -1px;\n`;\n\nconst UpsideDown = styled('div')`\n  transform: rotate(180deg);\n`;\n\nfunction TinyCard(props: CardType) {\n  return (\n    <Container key={`ord-${props.number}`}>\n      {props.number.toString().padStart(2, '0')}\n      <CardCore>\n        {props.number.toString().padStart(2, '0')}\n      </CardCore>\n      <UpsideDown>\n        {props.number.toString().padStart(2, '0')}\n        <CardCore>\n            {props.number.toString().padStart(2, '0')}\n        </CardCore>\n      </UpsideDown>\n    </Container>\n  );\n};\n\nexport default TinyCard;","import styled from 'styled-components';\n\nimport { CardType } from '../AppService';\nimport TinyCard from './TinyCard';\n\nconst Sequence = styled('ul')`\n  display: inline-block;\n  margin-bottom: 5px;\n  margin-top: 10px;\n`;\n\nconst Container = styled('ul')`\n  padding: 0;\n  margin: 0;\n  display: block;\n`;\n\nfunction PlayerCards({cards}: {cards:CardType[][]}) {\n  return (\n    <Container>\n      {cards.map((orderedCards) => (\n        <Sequence>\n          {orderedCards.map((card) => (\n            <TinyCard {...card} />\n          ))}\n        </Sequence>\n      ))}\n    </Container>\n  );\n};\n\nexport default PlayerCards;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Style = styled('span')`\n  background-color: #ffaf00;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  display: inline-block;\n  padding: 10px;\n  vertical-align: middle;\n  box-shadow: 1px 1px 3px #0000003b;\n  &:after {\n    content: '';\n    display: inline-block;\n    background-color: #fff67e;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    border-radius: 3px;\n    transform: rotate(45deg);\n  }\n`;\n\nfunction Coin() {\n  return (\n    <Style />\n  );\n};\n\nexport default Coin;","import { useState } from 'react';\nimport styled from 'styled-components';\n\nimport PlayerCards from './PlayerCards';\nimport { PlayerType } from '../AppService';\nimport Coin from './Coin';\n\nconst Container = styled('ul')`\n  display: block;\n  padding: 10px 0 10px 0;\n  margin: 0;\n`;\n\nconst StyledPlayer = styled('li')`\n  &:not(:last-child) {\n    padding-bottom: 20px;\n  }\n`;\n\nconst Score = styled('p')`\n  border-radius: 50%;\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  background-color: #20aaff;\n  padding: 10px;\n  margin: 0;\n  vertical-align: middle;\n  box-shadow: 1px 1px 3px #0000003b;\n`;\n\nconst Name = styled('p')`\n  margin: 0;\n  text-overflow: ellipsis;\n  width: 70px;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst StyledPlayerCards = styled(PlayerCards)`\n  display: block;\n`;\n\nconst Info = styled('div')`\n  background-color: #f0effd;\n  display: flex;\n  padding: 10px 40px;\n  border-radius: 50px;\n  align-items: center;\n  justify-content: space-between;\n  min-width: 200px;\n  flex-wrap: wrap;\n  position: relative;\n`;\n\nconst ShowCards = styled('button')`\n  border: none;\n  background-color: #8176dcc7;\n  width: 30px;\n  height: 100%;\n  border-radius: 0 100% 100% 0 / 0 50% 50% 0;\n  border-bottom: 0;\n  position: absolute;\n  right: 0;\n  color: white;\n`;\n\nconst Wrapper = styled('div')`\n  position: relative;\n  display: block;\n  padding: 10px 0 10px 0;\n  margin: 0;\n  background-color: #cccfe3;\n`;\n\nconst ShowDetails = styled('button')`\n  border-radius: 50%;\n  border: none;\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  background-color: #20aaff;\n  margin: 0;\n  box-shadow: 1px 1px 3px #0000003b;\n  margin-left: 10px;\n  vertical-align: text-bottom;\n`;\n\nfunction Player(props: PlayerType) {\n  const [show, setShow] = useState<boolean>(false);\n\n  return (\n    <StyledPlayer key={props.id}>\n      <Info>\n        <Name>{props.name}</Name>\n        <Score>{props.score}</Score>\n        <Coin /> {props.coins}\n        {props.orderedCards && props.orderedCards.length > 0 && (\n          <ShowCards onClick={() => setShow(!show)}>{'>'}</ShowCards>\n        )}\n      </Info>\n\n      {show && props.orderedCards && props.orderedCards.length > 0 && (\n        <StyledPlayerCards cards={props.orderedCards} />\n      )}\n    </StyledPlayer>\n  );\n};\n\nfunction Players({list}: {list: PlayerType[]}) {\n  const [minimized, setMinimized] = useState<boolean>(true);\n\n  return (\n    <Wrapper>\n      {list && list.length > 0 && minimized && (\n        <>\n          Players\n          <ShowDetails onClick={() => setMinimized(!minimized)}>{'v'}</ShowDetails>\n        </>\n      )}\n      {list && list.length > 0 && !minimized && (\n        <>\n          Players\n          <ShowDetails onClick={() => setMinimized(!minimized)}>{'v'}</ShowDetails>\n          <Container>\n            {list && list.map((item) => (\n              <Player {...item} />\n            ))}\n          </Container>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Players;","import React from 'react';\nimport styled from 'styled-components';\n\nimport { CardType } from '../AppService';\n\nconst Container = styled('li')`\n  display: inline-block;\n  padding: 10px;\n  border-radius: 6px;\n  text-align: left;\n  position: relative;\n  margin-bottom: -20px;\n  margin-left: -70px;\n  background-color: #f0effd;\n  box-shadow: -1px 1px 5px #0000003b;\n`;\n\nconst CardCore = styled('span')`\n  padding: 10px;\n  background-color: #8176dd;\n  background-color: #ff7632;\n  border-radius: 6px 6px 0 0;\n  display: block;\n  color: white;\n  font-size: 35px;\n  width: 80px;\n  margin-bottom: -1px;\n`;\n\nconst UpsideDown = styled('div')`\n  transform: rotate(180deg);\n`;\n\nfunction Card(props: CardType) {\n    return (\n        <Container key={props.number}>\n            {props.number.toString().padStart(2, '0')}\n            <CardCore>\n                {props.number.toString().padStart(2, '0')}\n            </CardCore>\n            <UpsideDown>\n                {props.number.toString().padStart(2, '0')}\n                <CardCore>\n                    {props.number.toString().padStart(2, '0')}\n                </CardCore>\n            </UpsideDown>\n        </Container>\n    );\n};\n\nexport default Card;","import React from 'react';\nimport styled from 'styled-components';\n\nimport { CardType } from '../AppService';\nimport Card from './Card';\nimport Coin from './Coin';\n\nconst Container = styled('div')`\n  position: relative;\n`;\n\nconst Deck = styled('ul')`\n  display: block;\n  padding: 0;\n  margin-left: calc(10px + 70px);\n  margin-right: 10px;\n  margin-bottom: 30px;\n`;\n\nconst Points = styled('div')`\n  position: absolute;\n  right: 10px;\n  z-index: 1;\n  p {\n    margin-left: 10px;\n    display: inline-block;\n  }\n`;\n\nfunction Table({coins, cards}: { coins: number, cards: CardType[]}) {\n  return (\n    <Container>\n      <Points>\n        <Coin />\n        <p>{coins ? coins.toString().padStart(2, '0') : 0}</p>\n      </Points>\n\n      {cards.length > 0 && (\n        <Deck>\n          {cards.map((item) => (\n            <Card {...item} />\n          ))}\n        </Deck>\n      )}\n    </Container>\n  );\n};\n\nexport default Table;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled('button')`\n  font-family: inherit;\n  border: none;\n  border-radius: 20px;\n  padding: 10px 50px;\n  color: white;\n  font-size: 16px;\n  background-color: #8176dd;\n  box-shadow: 1px 1px 3px #0000003b;\n`;\n\nfunction Button(props: any) {\n  return (\n    <StyledButton {...props} />\n  );\n};\n\nexport default Button;","import React from 'react';\nimport styled from 'styled-components';\n\nimport { PlayerType } from '../AppService';\nimport Button from './Button';\n\nconst Actions = styled('div')`\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst Container = styled('div')`\n  background-color: #f0effd;\n  padding: 10px;\n`;\n\ntype BlaProps = {\n  player: PlayerType;\n  handleCardsOrder: ({player, payToPass}: {player: PlayerType, payToPass: boolean}) => void;\n}\n\nfunction PlayerActions({player, handleCardsOrder}: BlaProps) {\n  return (\n    <Container>\n      <p>Its your turn {player.name}</p>\n      <Actions>\n        <Button onClick={() => handleCardsOrder({ player, payToPass: false })}>Yes, please</Button>\n\n        {player.coins > 0 && (\n          <Button onClick={() => handleCardsOrder({ player, payToPass: true })}>\n            No, thanks\n          </Button>\n        )}\n      </Actions>\n    </Container>\n  );\n};\n\nexport default PlayerActions;","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\n\nimport { calcScore, splitPlayerDeck, getShuffledDeck, PlayerType, CardType } from './AppService';\nimport Players from './components/Players';\nimport Table from './components/Table';\nimport PlayerActions from './components/PlayerActions';\nimport Button from './components/Button';\n\nconst Page = styled('div')`\n  height: 100vh;\n  display: grid;\n  grid-template-rows: auto 1fr auto auto;\n  text-align: center;\n  background-color: white;\n`;\n\nconst Turn = styled('div')`\n  background-color: #ffe65a;\n  padding: 30px 0;\n`;\n\nconst Header = styled('header')`\n  background-color: white;\n  text-transform: uppercase;\n  font-weight: 300;\n  padding: 20px;\n  box-shadow: 0px 5px 5px 0px #0000003b;\n  z-index: 1;\n`;\n\nconst Footer = styled('footer')`\n  background-color: #cccfe2;\n  padding: 10px;\n`;\n\nconst Main = styled('main')`\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n`;\n\nfunction App() {\n  const [finished, setFinished] = useState(true);\n\n  const [players, setPlayers] = useState<PlayerType[]> ([]);\n  const [tableCards, setTableCards] = useState<CardType[]> ([]);\n  const [tableCoins, setTableCoins] = useState<number>(0);\n  const [turn, setTurn] = useState(0);\n  const [player, setPlayer] = useState<PlayerType>();\n\n  const [ deck, setDeck ] = useState<CardType[]>([]);\n\n  useEffect(() => {\n    setDeck(getShuffledDeck());\n  },[]);\n\n  const updatePlayer = (player: PlayerType) => {\n    player.score = calcScore(player);\n    setPlayers((arr) =>\n      arr.map((item) => item.id === player.id ? player : item)\n    );\n  };\n\n  const handleCardsOrder = ({ player, payToPass }:{ player: PlayerType, payToPass: boolean }) => {\n    if (!payToPass) {\n      player.coins += tableCoins;\n      player.cards = [...player.cards, ...tableCards];\n      player.orderedCards = splitPlayerDeck(player);\n\n      setTableCoins(0);\n      setTableCards([]);\n\n      updatePlayer(player);\n    }\n\n    if (payToPass) {\n      setTableCoins((item) => item + 1);\n      player.coins -= 1;\n      setPlayers((arr) => arr.map((item) => item.id === player.id ? player : item));\n    }\n    handleNextTurn();\n  };\n\n  const handleNextTurn = () => {\n    const currentTurn = turn + 1;\n\n    if (!deck[currentTurn - 1]) {\n      setFinished(true);\n      return;\n    }\n    setTurn(currentTurn);\n  }\n\n  const selectPlayer = (turn: number) => {\n    if (players.length >= turn) {\n      setPlayer(players[turn -1]);\n      return;\n    }\n    const modd = turn % players.length;\n    const a = modd === 0 ? players.length : modd;\n\n    setPlayer(players[a - 1]);\n  }\n\n  useEffect(() => {\n    if (!turn) {\n      return;\n    }\n    if (deck[turn - 1]) {\n      setTableCards([...tableCards, deck[turn - 1]]);\n    }\n    selectPlayer(turn);\n  },[turn]);\n\n  const init = () => {\n    setTurn(1);\n    setPlayers([\n      { id: 1, name: 'Aline', coins: 11, cards: [], score: 0 },\n      { id: 2, name: 'Diego', coins: 11, cards: [], score: 0 },\n      { id: 3, name: 'Nimbus', coins: 11, cards: [], score: 0 },\n    ]);\n    setTableCards([]);\n    selectPlayer(1);\n    setFinished(false);\n  }\n\n  return (\n    <Page>\n      <Header>no thanks</Header>\n      <Main>\n        <Turn>Turn {turn} {player?.name}</Turn>\n\n        <Table coins={tableCoins} cards={tableCards} />\n\n        {finished && (\n          <Button data-testid='init' onClick={() => init()}>Start</Button>\n        )}\n        <Players list={players} />\n        {!finished && player && (\n          <PlayerActions player={player} handleCardsOrder={handleCardsOrder} />\n        )}\n      </Main>\n      <Footer>@alinelee</Footer>\n    </Page>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}